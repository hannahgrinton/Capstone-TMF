@model TMFadmin.Models.RevenueManager

@{
    // store sorting and filtering data locally
    string mySorting=ViewData["mySorting"] as string;
    string[] filteredDates = ViewData["date"] as string[];
    string[] filteredNotes = ViewData["notes"] as string[];
    string[] filteredImgFiles = ViewData["imgFile"] as string[];
    string[] filteredAdSizes = ViewData["adSize"] as string[];
    string[] filteredCosts = ViewData["cost"] as string[];
    string[] filteredPaid = ViewData["paid"] as string[];
    string[] filteredDue = ViewData["due"] as string[];
    string mustInclude = ViewData["mustInclude"] as string;
    bool mustIncludeAll = (mustInclude == "any" ? false : true);
    string csvExportString = "";

    // declare local sorted and filtered lists
    var sortedList = new List<Advertisement>();
    var filteredList = new List<Advertisement>();

    // get sorted list 
    sortedList = Model.sortAdsByMe(mySorting);

    // check for posted filters, get filtered list. if no filters posted, build default filter to show all list entries
    if(filteredDates!=null){

        // replace 'on' values left from post in filter list with null
        filteredDates = Model.convertOnToNull(filteredDates);
        filteredNotes = Model.convertOnToNull(filteredNotes);
        filteredImgFiles = Model.convertOnToNull(filteredImgFiles);
        filteredAdSizes = Model.convertOnToNull(filteredAdSizes);
        filteredCosts = Model.convertOnToNull(filteredCosts);
        filteredPaid = Model.convertOnToNull(filteredPaid);
        filteredDue = Model.convertOnToNull(filteredDue);

        // filter sorted list according to filtering parameters
        filteredList = Model.filterAdList(sortedList, filteredDates, filteredNotes, filteredImgFiles
                                                , filteredAdSizes, filteredCosts, filteredPaid, filteredDue, mustIncludeAll);
    }else{
        // create new filtered results lists
        filteredDates = new string[sortedList.Count];
        filteredNotes = new string[sortedList.Count];
        filteredImgFiles = new string[sortedList.Count];
        filteredAdSizes = new string[sortedList.Count];
        filteredCosts = new string[sortedList.Count];
        filteredPaid = new string[sortedList.Count];
        filteredDue = new string[sortedList.Count];

        // populate filter lists with all results in sorted list 
        for(var i = 0; i < sortedList.Count; i++){
            filteredDates[i] = sortedList[i].date.ToString();
            filteredNotes[i] = sortedList[i].notes;
            filteredImgFiles[i] = sortedList[i].imgFile;
            filteredAdSizes[i] = sortedList[i].adSize;
            filteredCosts[i] = sortedList[i].cost.ToString();
            filteredPaid[i] = sortedList[i].paid.ToString();
            filteredDue[i] = sortedList[i].due.ToString();
        }

        // bypass filtering, make filter list equivalent to sorted list

        filteredList = sortedList;
    }
    // create csv string from filtered list
    csvExportString = Model.createCsvString(filteredList); 

}

<div class="text-center" style="margin-top: 100px;">
    <h1 class="display-4">Advertisements</h1>
    <a href="#" class="filter-menu-toggle function-links">FILTER</a>
    <a href="@Url.Action("ExportCsv", "Home", new { myStringToExport = csvExportString , myStringToName = "Advertisements"})" class="function-links">EXPORT</a>

    <table class="table table-hover table-striped" style="margin-top: 40px;">
        <form asp-controller="Home" asp-action="ViewAdvertisements" method="post" class="">
            @{
                
                    <input type="hidden" name="mustInclude" id="hiddenMustInclude" value="@mustInclude">
                
                if(filteredDates!=null){
                    foreach(var item in filteredDates){
                    <input type="hidden" name="date[]" id="date-@item" value="@item">
                    }
                }
                if(filteredNotes!=null){
                    foreach(var item in filteredNotes){
                    <input type="hidden" name="notes[]" id="notes-@item" value="@item">
                    }
                }
                if(filteredImgFiles!=null){
                    foreach(var item in filteredImgFiles){
                    <input type="hidden" name="imgFile[]" id="imgFile-@item" value="@item">
                    }
                }
                if(filteredAdSizes!=null){
                    foreach(var item in filteredAdSizes){
                    <input type="hidden" name="adSize[]" id="adSize-@item" value="@item">
                    }
                }
                if(filteredCosts!=null){
                    foreach(var item in filteredCosts){
                    <input type="hidden" name="cost[]" id="cost-@item" value="@item">
                    }
                }
                if(filteredPaid!=null){
                    foreach(var item in filteredPaid){
                    <input type="hidden" name="paid[]" id="paid-@item" value="@item">
                    }
                }
                if(filteredDue!=null){
                    foreach(var item in filteredDue){
                    <input type="hidden" name="due[]" id="due-@item" value="@item">
                    }
                }
            }

        <thead class="thead-dark">
  <tr>
                <th scope="col">
                    <button type=submit class="sort-link" asp-controller="Home" asp-action="ViewAdvertisements" asp-route-mySorting="@(mySorting == "id_asc" ? "id_desc" : "id_asc")">#</button>
                    <i class="sort-icon fas @(mySorting == "id_asc" ? "fa-arrow-alt-circle-down" : "") @(mySorting == "id_desc" ? "fa-arrow-alt-circle-up" : "")"></i>
                </th>
                <th scope="col">
                    <button type=submit class="sort-link" asp-controller="Home" asp-action="ViewAdvertisements" asp-route-mySorting="@(mySorting == "date_asc" ? "date_desc" : "date_asc")">Date</button>
                    <i class="sort-icon fas @(mySorting == "date_asc" ? "fa-arrow-alt-circle-down" : "") @(mySorting == "date_desc" ? "fa-arrow-alt-circle-up" : "")"></i>
                </th>
                <th scope="col">
                    <button type=submit class="sort-link" asp-controller="Home" asp-action="ViewAdvertisements" asp-route-mySorting="@(mySorting == "notes_asc" ? "notes_desc" : "notes_asc")">Notes</button>
                    <i class="sort-icon fas @(mySorting == "notes_asc" ? "fa-arrow-alt-circle-down" : "") @(mySorting == "notes_desc" ? "fa-arrow-alt-circle-up" : "")"></i>
                </th>
                <th scope="col">
                    <button type=submit class="sort-link" asp-controller="Home" asp-action="ViewAdvertisements" asp-route-mySorting="@(mySorting == "img_asc" ? "img_desc" : "img_asc")">Image</button>
                    <i class="sort-icon fas @(mySorting == "img_asc" ? "fa-arrow-alt-circle-down" : "") @(mySorting == "img_desc" ? "fa-arrow-alt-circle-up" : "")"></i>
                </th>
                <th scope="col">
                    <button type=submit class="sort-link" asp-controller="Home" asp-action="ViewAdvertisements" asp-route-mySorting="@(mySorting == "size_asc" ? "size_desc" : "size_asc")">Size</button>
                    <i class="sort-icon fas @(mySorting == "size_asc" ? "fa-arrow-alt-circle-down" : "") @(mySorting == "size_desc" ? "fa-arrow-alt-circle-up" : "")"></i>
                </th>
                <th scope="col">
                    <button type=submit class="sort-link" asp-controller="Home" asp-action="ViewAdvertisements" asp-route-mySorting="@(mySorting == "cost_asc" ? "cost_desc" : "cost_asc")">Cost</button>
                    <i class="sort-icon fas @(mySorting == "cost_asc" ? "fa-arrow-alt-circle-down" : "") @(mySorting == "cost_desc" ? "fa-arrow-alt-circle-up" : "")"></i>
                </th>
                <th scope="col">
                    <button type=submit class="sort-link" asp-controller="Home" asp-action="ViewAdvertisements" asp-route-mySorting="@(mySorting == "paid_asc" ? "paid_desc" : "paid_asc")">Paid</button>
                    <i class="sort-icon fas @(mySorting == "paid_asc" ? "fa-arrow-alt-circle-down" : "") @(mySorting == "paid_desc" ? "fa-arrow-alt-circle-up" : "")" style=""></i>
                </th>
                <th scope="col">
                    <button type=submit class="sort-link" asp-controller="Home" asp-action="ViewAdvertisements" asp-route-mySorting="@(mySorting == "due_asc" ? "due_desc" : "due_asc")">Balance</button>
                    <i class="sort-icon fas @(mySorting == "due_asc" ? "fa-arrow-alt-circle-down" : "") @(mySorting == "due_desc" ? "fa-arrow-alt-circle-up" : "")" style=""></i>
                </th>
                <th scope="col">Options</th>
            </tr>



        </thead>
        </form>
        <tbody>
            @{
                foreach (var item in filteredList)
                {
                    <tr>
                        <td>@item.adId</td>
                        <td>@item.date</td>
                        <td style="max-width: 160px;">@item.notes</td>
                        <td style="max-width: 160px;">@item.imgFile</td>
                        <td>@item.adSize</td>
                        <td style="text-align: left;">$@item.cost</td>
                        <td style="text-align: left;">$@item.paid</td>
                        <td style="text-align: left;">$@item.due</td>
                        <td>
                            <form method="post">
                                <label class="ico-button"><i class="far fa-eye" style="font-size:20px;"></i><input type="submit" asp-controller="Home" asp-action="ViewAdvertisement" value="@item.adId" name="myAdId" hidden></label>
                                <label class="ico-button"><i class="fas fa-pencil-alt" style="font-size:20px;"></i><input type="submit" asp-controller="Home" asp-action="EditAdvertisement" value="@item.adId" name="adId" hidden></label>
                                <label class="ico-button"><i class="fas fa-trash-alt" style="font-size:20px;"></i><input type="submit" asp-controller="Home" asp-action="DeleteAdvertisement" value="@item.adId" name="myAdId" hidden></label>
                            </form>
                            
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>



@{ 
    List<string> filterListDate = new List<string>();
    List<string> filterListNotes = new List<string>();
    List<string> filterListImgFile = new List<string>();
    List<string> filterListAdSize = new List<string>();
    List<string> filterListCost = new List<string>();
    List<string> filterListPaid = new List<string>();
    List<string> filterListDue = new List<string>();

    <div id="filter-menu" class="debugFb filter-menu" style="display: none">
        
        <div class="container filter-menu-container">
            <a href="#" class="filter-menu-toggle">Back</a>
            <a class="" asp-controller="Home" asp-action="ViewAdvertisements">Reset</a>
        
            <h4>Filter</h4>
            <hr>

            <form asp-controller="Home" asp-action="ViewAdvertisements" method="post" class="filter-menu-form--mod">
                <input type="hidden" name="mySorting" value="@mySorting">
                @foreach(var item in sortedList){
                    if(!filterListDate.Contains(@item.date.ToString())){
                        filterListDate.Add(@item.date.ToString());
                        filterListDate.Sort();
                    }

                    if(!filterListNotes.Contains(@item.notes)){
                        filterListNotes.Add(@item.notes);
                        filterListNotes.Sort();
                    }
                    if(!filterListImgFile.Contains(@item.imgFile)){
                        filterListImgFile.Add(@item.imgFile);
                        filterListImgFile.Sort();
                    }

                    if(!filterListAdSize.Contains(@item.adSize)){
                        filterListAdSize.Add(@item.adSize);
                        filterListAdSize.Sort();
                    }
                    if(!filterListCost.Contains(@item.cost.ToString())){
                        filterListCost.Add(@item.cost.ToString());
                        filterListCost.Sort();
                    }
                    if(!filterListPaid.Contains(@item.paid.ToString())){
                        filterListPaid.Add(@item.paid.ToString());
                        filterListPaid.Sort();
                    }
                    if(!filterListDue.Contains(@item.due.ToString())){
                        filterListDue.Add(@item.due.ToString());
                        filterListDue.Sort();
                    }
                }
                <div class="filter-menu-check-toggles">
                    <a href="#" class="filter-menu-check-all">Check All</a>

                    <a href="#" class="filter-menu-uncheck-all">Uncheck All</a>
                </div>
                <div class="filter-menu-require">
                    <b>Require:</b>
                    <div>
                        <input @(mustIncludeAll ? "" : "checked") type="radio" name="mustInclude" id="radIncAny" value="any">
                        <label for="radIncAny">Any</label>
                    </div>
                    <div>
                        <input @(mustIncludeAll ? "checked" : "") type="radio" name="mustInclude" id="radIncAll" value="all">
                        <label for="radIncAll">All</label>
                    </div>
                </div>
                <h5>Date</h5>
                @for(var i = 0; i < filterListDate.Count;i++){

                    <div class="form-check form-check-inline">
                        <label class="form-check-label filter-menu-label">
                            <input @(filteredDates.Contains(@filterListDate[i]) ? "checked" : "") class="form-check-input" type="checkbox" name="date[]" id="date-@i" value="@filterListDate[i]">
                            @filterListDate[i]
                        </label>
                    </div>
                }
                <hr>

                <h5>Notes</h5>
                @for(var i = 0; i < filterListNotes.Count;i++){

                    <div class="form-check form-check-inline">
                        <label class="form-check-label filter-menu-label">
                            <input @(filteredNotes.Contains(@filterListNotes[i]) ? "checked" : "") class="form-check-input" type="checkbox" name="notes[]" id="notes-@i" value="@filterListNotes[i]">
                            @filterListNotes[i]
                        </label>
                    </div>
                }
                <hr>

                <h5>ImgFile</h5>
                @for(var i = 0; i < filterListImgFile.Count;i++){

                    <div class="form-check form-check-inline">
                        <label class="form-check-label filter-menu-label">
                            <input @(filteredImgFiles.Contains(@filterListImgFile[i]) ? "checked" : "") class="form-check-input" type="checkbox" name="imgFile[]" id="imgFile-@i" value="@filterListImgFile[i]">
                            @filterListImgFile[i]
                        </label>
                    </div>
                }
                <hr>

                <h5>AdSize</h5>
                @for(var i = 0; i < filterListAdSize.Count;i++){

                    <div class="form-check form-check-inline">
                        <label class="form-check-label filter-menu-label">
                            <input @(filteredAdSizes.Contains(@filterListAdSize[i]) ? "checked" : "") class="form-check-input" type="checkbox" name="adSize[]" id="adSize-@i" value="@filterListAdSize[i]">
                            @filterListAdSize[i]
                        </label>
                    </div>
                }
                <hr>

                <h5>Cost</h5>
                @for(var i = 0; i < filterListCost.Count;i++){

                    <div class="form-check form-check-inline">
                        <label class="form-check-label filter-menu-label">
                            <input @(filteredCosts.Contains(@filterListCost[i]) ? "checked" : "") class="form-check-input" type="checkbox" name="cost[]" id="cost-@i" value="@filterListCost[i]">
                            $@filterListCost[i]
                        </label>
                    </div>
                }
                <hr>

                <h5>Paid</h5>
                @for(var i = 0; i < filterListPaid.Count;i++){

                    <div class="form-check form-check-inline">
                        <label class="form-check-label filter-menu-label">
                            <input @(filteredPaid.Contains(@filterListPaid[i]) ? "checked" : "") class="form-check-input" type="checkbox" name="paid[]" id="paid-@i" value="@filterListPaid[i]">
                            $@filterListPaid[i]
                        </label>
                    </div>
                }
                <hr>

                <h5>Due</h5>
                @for(var i = 0; i < filterListDue.Count;i++){

                    <div class="form-check form-check-inline">
                        <label class="form-check-label filter-menu-label">
                            <input @(filteredDue.Contains(@filterListDue[i]) ? "checked" : "") class="form-check-input" type="checkbox" name="due[]" id="due-@i" value="@filterListDue[i]">
                            $@filterListDue[i]
                        </label>
                    </div>
                }
                <hr>

                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>

    </div>
}



</div>